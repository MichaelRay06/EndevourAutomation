"use strict";
/* IMPORT */
var traverse = require("json-schema-traverse");
var consts_1 = require("./consts");
/* AJV FILTER */
var Filter = {
    patchInstance: function (ajv, setToUndefined) {
        if (setToUndefined === void 0) { setToUndefined = false; }
        ajv['_opts'].allErrors = true;
        ajv['_opts'].removeAdditional = 'all';
        ajv.addKeyword(consts_1.KEYWORD, {
            statements: true,
            inline: function (it) {
                if (!it.level) {
                    return 'function isPO(x){return typeof x==="object"&&x!==null&&!Array.isArray(x)}' +
                        'function isEmpty(x){for(var k in x){return false}return true}' +
                        'function hasReqErr(i,lvl){' +
                        'for(;i < errors;i++){' +
                        'var e=vErrors[i];' +
                        'if(e.keyword!=="required")continue;' +
                        'if(e.schemaPath.split("properties").length!==lvl)continue;' +
                        'return true;' +
                        '}' +
                        'return false;' +
                        '};' +
                        'valid0=true;';
                }
                else {
                    var LEVEL = it.level, DATA_LEVEL = it.dataLevel || '', DATA_PATH = it['dataPathArr'][DATA_LEVEL], //TODO: https://github.com/epoberezkin/ajv/issues/1096
                    SCHEMA_PROPERTIES_NR = it.schemaPath.split('properties').length, P_DATA_LEVEL = it.dataLevel - 1 || '', TARGET_GETTER = "data" + P_DATA_LEVEL + "[" + DATA_PATH + "]", DELETE = setToUndefined ? TARGET_GETTER + "=undefined;" : "delete " + TARGET_GETTER + ";";
                    return "var _=" + TARGET_GETTER + ";" +
                        ("if((errors>errs_" + DATA_LEVEL + "&&(!isPO(_)||hasReqErr(errs_" + DATA_LEVEL + "," + SCHEMA_PROPERTIES_NR + "))||(errors<=errs_" + DATA_LEVEL + "&&isPO(_)&&isEmpty(_)))) " + DELETE) +
                        ("valid" + LEVEL + "=true;");
                }
            }
        });
        return ajv;
    },
    patchSchema: function (schema) {
        traverse(schema, {
            cb: {
                post: function (schema) {
                    schema[consts_1.KEYWORD] = true;
                }
            }
        });
        return schema;
    }
};
/* EXPORT */
module.exports = Filter;
module.exports.default = Filter;
Object.defineProperty(module.exports, "__esModule", { value: true });
